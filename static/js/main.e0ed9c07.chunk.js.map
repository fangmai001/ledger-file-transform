{"version":3,"sources":["components/DataFrame/index.js","components/Content/Ahorro_Export_Data_20210601.csv","components/Content/index.js","components/BasicLayout/index.js","App.js","reportWebVitals.js","index.js"],"names":["dayjs","locale","excelPackage","sheetData","sheetHeader","representedAt","df","DataFrame","map","row","set","parseFloat","get","foodDF","where","stat","sum","lifeDF","nonLifeDF","ExportJsonExcel","fileName","datas","toArray","sheetName","Content","useState","fileList","setFileList","excelFileArr","setExcelFileArr","fileStyle","setFileStyle","onloadfile","e","textStr","target","result","convertDataArr","splitKey","arrayKay","indexOf","textArr","split","currentIndex","splice","dataArr","convertExecl","newExcelFileArr","inputData","headerArr","slice","dfSize","count","splitExcel","splitData","date","getRow","source","sortBy","index","currentDate","dataIndex","findIndex","month","lastData","length","startOf","format","push","toExcel","total","reverse","parseDataFrame","colLayout","xs","sm","gutter","title","customRequest","onChange","info","newFileList","file","fileReader","FileReader","onload","readAsText","originFileObj","status","icon","UploadOutlined","onClick","href","exampleCSV","download","style","margin","Group","value","disabled","itemLayout","dataSource","renderItem","item","Item","Meta","avatar","FileTextOutlined","description","DownloadOutlined","saveExcel","BasicLayout","Header","position","zIndex","width","className","padding","marginTop","minHeight","Footer","textAlign","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0ed9c07.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport DataFrame from 'dataframe-js';\r\nimport dayjs from 'dayjs'\r\nimport ExportJsonExcel from 'js-export-excel'\r\n\r\ndayjs.locale('zh-tw')\r\n\r\nconst excelPackage = (sheetData, sheetHeader, representedAt) => {\r\n  const df = new DataFrame(\r\n    sheetData,\r\n    sheetHeader,\r\n  ).map((row) => row.set('金額', parseFloat(row.get('金額'))))\r\n\r\n  // \"日期\", \"帳戶\", \"帳戶貨幣\", \"類別\", \"金額\", \"描述\"\r\n  const foodDF = new DataFrame(\r\n    [\r\n      ['', '', '', '早餐', df.where(row => row.get('類別') === '早餐').stat.sum('金額'), ''],\r\n      ['', '', '', '午餐', df.where(row => row.get('類別') === '午餐').stat.sum('金額'), ''],\r\n      ['', '', '', '晚餐', df.where(row => row.get('類別') === '晚餐').stat.sum('金額'), ''],\r\n    ],\r\n    sheetHeader,\r\n  )\r\n  const lifeDF = df.where(row => {\r\n    return (row.get('帳戶') === '生活費') && (row.get('類別') !== '早餐') && (row.get('類別') !== '午餐') && (row.get('類別') !== '晚餐')\r\n  })\r\n  const nonLifeDF = df.where(row => row.get('帳戶') === '非生活費')\r\n\r\n  const toExcel = new ExportJsonExcel({\r\n    fileName: `ledger_${representedAt}`,\r\n    datas: [\r\n      {\r\n        sheetData: foodDF.toArray(),\r\n        sheetHeader,\r\n        sheetName: '餐飲費',\r\n      },\r\n      {\r\n        sheetData: lifeDF.toArray(),\r\n        sheetHeader,\r\n        sheetName: '生活費',\r\n      },\r\n      {\r\n        sheetData: nonLifeDF.toArray(),\r\n        sheetHeader,\r\n        sheetName: '非生活費',\r\n      },\r\n      {\r\n        sheetData: df.toArray(),\r\n        sheetHeader,\r\n        sheetName: '全部',\r\n      },\r\n    ]\r\n  })\r\n\r\n  return toExcel\r\n}\r\n\r\nconst dataFrameTotle = (sheetData, sheetHeader) => {\r\n  // \"日期\", \"帳戶\", \"帳戶貨幣\", \"類別\", \"金額\", \"描述\"\r\n  const df = new DataFrame(\r\n    sheetData,\r\n    sheetHeader,\r\n  )\r\n\r\n  return df.stat.sum('金額')\r\n}\r\n\r\nexport const parseDataFrame = (inputData) => {\r\n  const headerArr = inputData[0]\r\n  const dataArr = inputData.slice(1)\r\n  const df = new DataFrame(\r\n    dataArr,\r\n    headerArr,\r\n  )\r\n  const dfSize = df.count()\r\n  \r\n  const splitExcel = []\r\n  const splitData = [\r\n    {\r\n      date: dayjs(df.getRow(0).get('日期')),\r\n      source: [df.getRow(0).toArray()],\r\n    },\r\n  ]\r\n\r\n  df.sortBy('日期').map((row, index) => {\r\n    const currentDate = dayjs(row.get('日期'))\r\n    const dataIndex = splitData.findIndex((e) => e.date.month() === currentDate.month())\r\n\r\n    if (dataIndex === -1 || (index + 1) === dfSize) {\r\n      const lastData = splitData[(splitData.length - 1)]\r\n      const representedAt = lastData.date.startOf('month').format('YYYY-MM')\r\n\r\n      splitExcel.push({\r\n        toExcel: excelPackage(lastData.source, headerArr, representedAt),\r\n        representedAt,\r\n        total: dataFrameTotle(lastData.source, headerArr),\r\n      })\r\n\r\n      splitData.push({\r\n        date: currentDate,\r\n        source: [row.toArray()],\r\n      })\r\n    } else {\r\n      splitData[dataIndex].source.push(row.toArray())\r\n    }\r\n  })\r\n\r\n  return splitExcel.reverse()\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Ahorro_Export_Data_20210601.a840a479.csv\";","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  List,\r\n  Avatar,\r\n  Upload,\r\n  Radio,\r\n  message,\r\n} from 'antd';\r\nimport {\r\n  UploadOutlined,\r\n  FileTextOutlined,\r\n  DownloadOutlined\r\n} from '@ant-design/icons';\r\nimport dayjs from 'dayjs'\r\nimport { parseDataFrame } from '../DataFrame/index'\r\nimport exampleCSV from './Ahorro_Export_Data_20210601.csv'\r\n\r\nimport './index.css';\r\n\r\ndayjs.locale('zh-tw')\r\n\r\nfunction Content() {\r\n  const [fileList, setFileList] = useState([])\r\n  const [excelFileArr, setExcelFileArr] = useState([])\r\n  const [fileStyle, setFileStyle] = useState('life');\r\n\r\n  // useEffect(() => {\r\n  // })\r\n\r\n  const onloadfile = (e) => {\r\n    const textStr = e.target.result\r\n    convertDataArr(textStr)\r\n  }\r\n\r\n  const convertDataArr = (textStr) => {\r\n    let splitKey = ''\r\n    let arrayKay = ''\r\n    if (textStr.indexOf(' \\r\\n') !== -1) {\r\n      splitKey = ' \\r\\n'\r\n      arrayKay = '\\r\\n\\r\\n-- 收入 --'\r\n    } else {\r\n      splitKey = ' \\n'\r\n      arrayKay = '\\n\\n-- 收入 --'\r\n    }\r\n\r\n    const textArr = textStr.split(splitKey)\r\n    let currentIndex = -1\r\n    currentIndex = textArr.indexOf('-- 支出 --')\r\n    if (currentIndex !== -1) {\r\n      // remove\r\n      textArr.splice(currentIndex, 1)\r\n    }\r\n    currentIndex = textArr.indexOf(arrayKay)\r\n    if (currentIndex !== -1) {\r\n      // remove\r\n      textArr.splice(currentIndex)\r\n    }\r\n    const dataArr = textArr.map((e) => e.split(', '))\r\n    convertExecl(dataArr)\r\n  }\r\n\r\n  const convertExecl = (dataArr) => {\r\n    const newExcelFileArr = parseDataFrame(dataArr)\r\n\r\n    setExcelFileArr([\r\n      ...newExcelFileArr,\r\n    ])\r\n  }\r\n\r\n  const saveToExcel = (toExcel) => {\r\n    toExcel.saveExcel()\r\n  }\r\n\r\n  const onRadioChange = e => {\r\n    setExcelFileArr([])\r\n    setFileList([])\r\n    setFileStyle(e.target.value)\r\n  }\r\n\r\n  const colLayout = { xs: 24, sm: 12 }\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[16, 16]}>\r\n        <Col {...colLayout}>\r\n          <Card title=\"上傳檔案\">\r\n            <Upload\r\n              customRequest={() => {}}\r\n              fileList={fileList}\r\n              onChange={(info) => {\r\n                const { fileList } = info\r\n                const newFileList = fileList.map((file) => {\r\n                  const fileReader = new FileReader()\r\n                  fileReader.onload = onloadfile\r\n                  fileReader.readAsText(file.originFileObj)\r\n                  file.status = 'success'\r\n                  return file\r\n                })\r\n                setFileList(newFileList)\r\n              }}\r\n            >\r\n              <Button icon={<UploadOutlined />}>檔案上傳</Button>\r\n            </Upload>\r\n            <Button\r\n              onClick={() => {\r\n                setExcelFileArr([])\r\n                setFileList([])\r\n              }}\r\n            >\r\n              清除轉換檔案\r\n            </Button>\r\n            {/* <img src='/ledger-file-transform/test.jpg' /> */}\r\n            <a href={exampleCSV} download=\"Ahorro_Export_Data_20210601.csv\">\r\n              <Button style={{ margin: '10px' }}>\r\n                Download example\r\n              </Button>\r\n            </a>\r\n            <br />\r\n            <Radio.Group onChange={onRadioChange} value={fileStyle}>\r\n              <Radio value=\"default\" disabled>預設</Radio>\r\n              <Radio value=\"life\">區分生活費、餐飲費</Radio>\r\n            </Radio.Group>\r\n          </Card>\r\n        </Col>\r\n        <Col {...colLayout}>\r\n          <Card title=\"下載轉換檔案\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={excelFileArr}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar icon={<FileTextOutlined />} />}\r\n                    title=\"記帳紀錄\"\r\n                    description={(\r\n                      <div>\r\n                        <Button icon={<DownloadOutlined />} onClick={() => saveToExcel(item.toExcel)}>\r\n                          檔案下載\r\n                        </Button>\r\n                        {' '}\r\n                        <span>日期: {item.representedAt}</span>\r\n                        {' '}\r\n                        <span>總額: {item.total}$</span>\r\n                      </div>\r\n                    )}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport Content from '../Content/index'\r\nimport 'antd/dist/antd.css';\r\n\r\nimport './index.css';\r\n\r\nclass BasicLayout extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Layout.Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n          <div className=\"logo\" />\r\n          {/* <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n            <Menu.Item key=\"1\">首頁</Menu.Item>\r\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n          </Menu> */}\r\n        </Layout.Header>\r\n        <Layout.Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            {/* <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item> */}\r\n          </Breadcrumb>\r\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 800 }}>\r\n            <Content />\r\n          </div>\r\n        </Layout.Content>\r\n        <Layout.Footer style={{ textAlign: 'center' }}>©2021</Layout.Footer>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BasicLayout;\r\n","import './App.css';\r\nimport BasicLayout from \"./components/BasicLayout/index\"\r\n\r\nfunction App() {\r\n  return (\r\n    <BasicLayout />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}